// <auto-generated />
using MV.Demo.CityInfo.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MV.Demo.CityInfo.API.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    partial class CityInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MV.Demo.CityInfo.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new { Id = 1, Description = "The one with that big park", Name = "New York City" },
                        new { Id = 2, Description = "The one with the Opera House", Name = "Sydney" },
                        new { Id = 3, Description = "The one with an Eiffel Tower", Name = "Paris" }
                    );
                });

            modelBuilder.Entity("MV.Demo.CityInfo.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new { Id = 1, CityId = 1, Description = "The most visited urban park in the US", Name = "Centenial Park" },
                        new { Id = 2, CityId = 1, Description = "A 102-story skyscraper", Name = "Empire State Building" },
                        new { Id = 3, CityId = 2, Description = "Where fat lady sings", Name = "Opera House" },
                        new { Id = 4, CityId = 2, Description = "Australian heritage-listed steel through arch bridge across Sydney Harbour", Name = "Harbour Bridge" },
                        new { Id = 5, CityId = 3, Description = "A wrought iron lattice tower", Name = "Eiffel Tower" },
                        new { Id = 6, CityId = 3, Description = "The world's largest museum", Name = "The Louvre" }
                    );
                });

            modelBuilder.Entity("MV.Demo.CityInfo.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("MV.Demo.CityInfo.API.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
